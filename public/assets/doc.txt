# Documentation du Projet SupaFlow

## Description

SupaFlow est un projet web statique visant à [Décrire l'objectif du projet ici]. Il utilise des technologies modernes pour offrir une expérience utilisateur performante et agréable sans nécessiter de backend serveur traditionnel.

## Technologies Utilisées

* **Tailwind CSS :** Un framework CSS utilitaire-first pour un développement rapide et une personnalisation aisée de l'interface utilisateur.
* **HTMX :** Une librairie permettant d'accéder à des fonctionnalités avancées d'HTML5 directement dans votre HTML, facilitant les requêtes AJAX et l'interaction avec l'API Supabase.
* **Supabase :** Une plateforme open-source fournissant des outils backend tels qu'une base de données PostgreSQL, une authentification, du stockage et des fonctions edge, accessibles directement depuis le client.
* **JavaScript :** Pour la logique côté client et l'interaction avec l'API Supabase.

## Prérequis

Avant de commencer, assurez-vous d'avoir un compte [Supabase](https://supabase.com/) pour configurer votre base de données et obtenir les clés d'API.

## Configuration

1. **Cloner le dépôt :**
   ```bash
   git clone [URL du dépôt]
   cd SupaFlow
   ```

2. **Configurer les clés d'API Supabase :**
   Ouvrez le fichier `public/js/script.js` et `public/js/create-database.js` et remplacez les placeholders `YOUR_SUPABASE_URL` et `YOUR_SUPABASE_KEY` par vos identifiants Supabase.

   **Attention :** Inclure directement vos clés d'API dans le code client n'est pas recommandé pour les applications en production. Considérez des méthodes plus sécurisées pour gérer les secrets en environnement de production.

## Structure du Projet

* **`admin/` :** Contient les fichiers relatifs à l'interface d'administration.
* **`public/` :** Ressources publiques telles que les fichiers CSS, JavaScript et les assets.
* **`public/css/style.css` :** Fichier CSS principal (peut être généré par Tailwind).
* **`public/js/script.js` :** Fichier JavaScript principal pour la logique côté client.
* **`public/js/create-database.js` :** Fichier JavaScript pour l'initialisation de la base de données.
* **`index.html` :** Page d'accueil du site.
* **`package.json` :** Fichier de configuration npm contenant les dépendances et les scripts (principalement pour le développement des assets).
* **`tailwind.config.js` :** Configuration de Tailwind CSS.

## Utilisation de Tailwind CSS

Tailwind CSS est configuré via le fichier `tailwind.config.js`. Vous pouvez personnaliser le thème, les couleurs, les polices et d'autres aspects de l'apparence de votre site en modifiant ce fichier. Les classes utilitaires de Tailwind sont ensuite utilisées directement dans le HTML pour styliser les éléments.

## Utilisation de HTMX

HTMX simplifie la création d'interfaces web dynamiques. Vous pouvez ajouter des attributs HTMX directement dans vos éléments HTML pour effectuer des requêtes et interagir avec l'API Supabase, sans avoir à écrire beaucoup de JavaScript.

## Déploiement

Ce projet étant un site statique, vous pouvez le déployer sur diverses plateformes d'hébergement statique telles que :

* **Netlify :** [https://www.netlify.com/](https://www.netlify.com/)
* **Vercel :** [https://vercel.com/](https://vercel.com/)
* **GitHub Pages :** [https://pages.github.com/](https://pages.github.com/)

Suivez les instructions de la plateforme choisie pour déployer votre site statique. Généralement, cela implique de connecter votre dépôt Git à la plateforme et de configurer les options de build si nécessaire.

## Contribution

[Instructions de contribution à ajouter ici]

---

Ce document fournit une vue d'ensemble du projet et de sa configuration. Pour des informations plus détaillées, veuillez consulter les fichiers spécifiques et la documentation des technologies utilisées.
